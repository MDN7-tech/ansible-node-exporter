- name: Define Node Exporter filename mapping
  set_fact:
    node_exporter_mapping:
      linux-amd64: "node_exporter-{{ node_exporter_version | regex_replace('^v', '') }}.linux-amd64.tar.gz"
      linux-arm64: "node_exporter-{{ node_exporter_version | regex_replace('^v', '') }}.linux-arm64.tar.gz"
      linux-386: "node_exporter-{{ node_exporter_version | regex_replace('^v', '') }}.linux-386.tar.gz"

- name: Detect architecture
  ansible.builtin.shell: uname -m
  register: architecture_output

- name: Map architecture to Node Exporter filename
  set_fact:
    node_exporter_arch: >-
      {% if architecture_output.stdout.strip() == 'x86_64' %}
        linux-amd64
      {% elif architecture_output.stdout.strip() == 'aarch64' %}
        linux-arm64
      {% elif architecture_output.stdout.strip() in ['i386', 'i686'] %}
        linux-386
      {% else %}
        linux-amd64
      {% endif %}

- name: Clean up architecture variable
  set_fact:
    node_exporter_arch: "{{ node_exporter_arch.strip() }}"

- name: Set Node Exporter filename
  set_fact:
    node_exporter_filename: "{{ node_exporter_mapping[node_exporter_arch] }}"

- name: Check if Node Exporter binary is available locally in Ansible files directory
  become: false
  stat:
    path: "{{ role_path }}/files/{{ node_exporter_filename }}"
  delegate_to: localhost  
  register: node_exporter_tar_stat

- name: Download Node Exporter binary if not already available in Ansible files directory
  become: false
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/{{ node_exporter_version }}/{{ node_exporter_filename }}"
    dest: "{{ role_path }}/files/"
    mode: '0644'
  delegate_to: localhost
  when: not node_exporter_tar_stat.stat.exists

- name: Copy Node Exporter tar file from Ansible files directory to remote server
  copy:
    src: "{{ role_path }}/files/{{ node_exporter_filename }}"
    dest: "/tmp/"

- name: Extract Node Exporter binary
  unarchive:
    src: "/tmp/{{ node_exporter_filename }}"
    dest: "/tmp/"
    remote_src: yes

- name: Find extracted directory
  find:
    paths: "/tmp/"
    patterns: "node_exporter*"
    file_type: directory
  register: extracted_dir

- name: Copy Node Exporter binary to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ extracted_dir.files[0].path }}/node_exporter"
    dest: "{{ node_exporter_install_dir }}/node_exporter"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_user }}"
    mode: '0755'
    remote_src: yes
- name: Clean up temporary Node Exporter tar file
  file:
    path: "/tmp/node_exporter.tar.gz"
    state: absent

- name: Clean up extracted directory
  file:
    path: "{{ extracted_dir.files[0].path }}"
    state: absent

